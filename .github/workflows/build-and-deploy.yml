---
name: Build and Deploy to ECR

on:
  push:
    branches:
      - main

permissions:
  id-token: write   # This is required for requesting the JWT
  contents: read    # This is required for actions/checkout

env:
  AWS_REGION: eu-west-1
  AWS_ACCOUNT_ID: 716641112337

jobs:
  yaml-formatting-check:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'

      - name: Install yamllint
        run: pip install yamllint

      - name: Run yamllint
        run: yamllint .

  python-code-check:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8  # Use flake8 for code checking

      - name: Run Flake8 (or other code checking tool)
        run: flake8 .

  build-and-deploy:
    runs-on: ubuntu-latest
    needs:
      - yaml-formatting-check
      - python-code-check
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::716641112337:role/cicd-sgp
          role-session-name: GitHub_to_AWS_via_FederatedOIDC
          aws-region: eu-west-1

      - name: Sts GetCallerIdentity
        run: |
          aws sts get-caller-identity

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, tag, and push docker image to Amazon ECR
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: sgp-demo
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
          docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG
